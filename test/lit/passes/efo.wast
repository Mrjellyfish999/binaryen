;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; RUN: foreach %s %t wasm-opt -all --efo --nominal -S -o - | filecheck %s

(module
  ;; CHECK:      (type $A (struct (field i32) (field i32)))
  (type $A (struct (field i32) (field i32)))
  ;; CHECK:      (type $B (struct (field i32) (field i32)))
  (type $B (struct (field i32) (field i32)))

  ;; CHECK:      (func $A (type $none_=>_none)
  ;; CHECK-NEXT:  (local $ref (ref $A))
  ;; CHECK-NEXT:  (local.set $ref
  ;; CHECK-NEXT:   (struct.new $A
  ;; CHECK-NEXT:    (i32.const 10)
  ;; CHECK-NEXT:    (i32.const 10)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (struct.get $A 0
  ;; CHECK-NEXT:    (local.get $ref)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (struct.get $A 0
  ;; CHECK-NEXT:    (local.get $ref)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $A
    (local $ref (ref $A))
    (local.set $ref
      (struct.new $A
        (i32.const 10)
        (i32.const 10)
      )
    )
    (drop
      (struct.get $A 0
        (local.get $ref)
      )
    )
    (drop
      (struct.get $A 1
        (local.get $ref)
      )
    )
  )

  ;; CHECK:      (func $B (type $none_=>_none)
  ;; CHECK-NEXT:  (local $ref (ref $B))
  ;; CHECK-NEXT:  (local.set $ref
  ;; CHECK-NEXT:   (struct.new $B
  ;; CHECK-NEXT:    (i32.const 10)
  ;; CHECK-NEXT:    (i32.const 11)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (struct.get $B 0
  ;; CHECK-NEXT:    (local.get $ref)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (struct.get $B 1
  ;; CHECK-NEXT:    (local.get $ref)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $B
    (local $ref (ref $B))
    (local.set $ref
      (struct.new $B
        (i32.const 10)
        (i32.const 11)
      )
    )
    (drop
      (struct.get $B 0
        (local.get $ref)
      )
    )
    (drop
      (struct.get $B 1
        (local.get $ref)
      )
    )
  )
)
